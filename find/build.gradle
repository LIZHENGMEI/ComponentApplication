if (isFindModel.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
def config = rootProject.ext.androidVersion
def des = rootProject.ext.supportDes

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        if (isFindModel.toBoolean()) {
            applicationId config.applicationId
        }

        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isFindModel.toBoolean()) {
                manifest.srcFile 'src/main/model/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude '*module'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation des.appcompat

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation rootProject.ext.testDes["junit"]
    androidTestImplementation rootProject.ext.testDes["androidTest"]
    androidTestImplementation rootProject.ext.testDes["espresso"]
    //基础模块提供 HTTP database 等基础功能
    implementation project(path: ':commonlibrary')
    annotationProcessor rootProject.ext.appDes["Arouter_compiler"]
}
